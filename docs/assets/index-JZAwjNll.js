var I=Object.defineProperty;var x=(c,e,t)=>e in c?I(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var h=(c,e,t)=>x(c,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();const B="modulepreload",L=function(c){return"/barcode-reader-demo/"+c},E={},y=function(e,t,n){let i=Promise.resolve();if(t&&t.length>0){let d=function(o){return Promise.all(o.map(u=>Promise.resolve(u).then(m=>({status:"fulfilled",value:m}),m=>({status:"rejected",reason:m}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),l=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));i=d(t.map(o=>{if(o=L(o),o in E)return;E[o]=!0;const u=o.endsWith(".css"),m=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${m}`))return;const g=document.createElement("link");if(g.rel=u?"stylesheet":B,u||(g.as="script"),g.crossOrigin="",g.href=o,l&&g.setAttribute("nonce",l),document.head.appendChild(g),u)return new Promise((p,f)=>{g.addEventListener("load",p),g.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${o}`)))})}))}function s(d){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=d,window.dispatchEvent(a),!a.defaultPrevented)throw d}return i.then(d=>{for(const a of d||[])a.status==="rejected"&&s(a.reason);return e().catch(s)})};class R{constructor(){h(this,"isDevelopment");h(this,"activeTimers",new Map);h(this,"groupStack",[]);this.isDevelopment=!1}formatTimestamp(){return new Date().toISOString().split("T")[1].slice(0,-1)}getLogStyle(e){return{debug:"color: #6c757d; font-weight: normal;",info:"color: #007bff; font-weight: bold;",warn:"color: #ffc107; font-weight: bold;",error:"color: #dc3545; font-weight: bold;"}[e]}getCategoryStyle(e){return{App:"background: #007bff; color: white; padding: 2px 6px; border-radius: 3px;",Scanner:"background: #28a745; color: white; padding: 2px 6px; border-radius: 3px;",UI:"background: #6f42c1; color: white; padding: 2px 6px; border-radius: 3px;",Upload:"background: #fd7e14; color: white; padding: 2px 6px; border-radius: 3px;",ServiceWorker:"background: #20c997; color: white; padding: 2px 6px; border-radius: 3px;",Utils:"background: #6c757d; color: white; padding: 2px 6px; border-radius: 3px;",ProviderRegistry:"background: #e83e8c; color: white; padding: 2px 6px; border-radius: 3px;",ZXingProvider:"background: #17a2b8; color: white; padding: 2px 6px; border-radius: 3px;",ZXingWasmProvider:"background: #ff851b; color: white; padding: 2px 6px; border-radius: 3px;",Quagga2Provider:"background: #6610f2; color: white; padding: 2px 6px; border-radius: 3px;",BarcodeDetectorProvider:"background: #15ca20; color: white; padding: 2px 6px; border-radius: 3px;",DynamsoftProvider:"background: #0033cc; color: white; padding: 2px 6px; border-radius: 3px;",BenchmarkRunner:"background: #fd7e14; color: white; padding: 2px 6px; border-radius: 3px;"}[e]}log(e,t,n,i,s){if(!this.isDevelopment&&e==="debug")return;const d=this.formatTimestamp(),a={timestamp:d,level:e,category:t,message:n,data:i,error:s},l=this.getCategoryStyle(t),o=this.getLogStyle(e),m=[`${"  ".repeat(this.groupStack.length)}%c${t}%c %c${e.toUpperCase()}%c ${d} - ${n}`,l,"color: inherit;",o,"color: inherit;"];switch(i!==void 0&&m.push(`
📊 Data:`,i),s&&m.push(`
❌ Error details below ↓`),e){case"debug":console.debug(...m),s&&console.debug(s);break;case"info":console.info(...m),s&&console.info(s);break;case"warn":console.warn(...m),s&&console.warn(s);break;case"error":console.error(...m),s&&console.error(s);break}this.isDevelopment&&this.storeLogEntry(a)}storeLogEntry(e){try{const t=JSON.parse(sessionStorage.getItem("barcode-scanner-logs")||"[]");t.push(e),t.length>100&&t.splice(0,t.length-100),sessionStorage.setItem("barcode-scanner-logs",JSON.stringify(t))}catch{}}debug(e,t,n){this.log("debug",e,t,n)}info(e,t,n){this.log("info",e,t,n)}warn(e,t,n){this.log("warn",e,t,n)}error(e,t,n,i){this.log("error",e,t,i,n)}time(e){this.activeTimers.set(e,performance.now()),this.debug("Utils",`⏱️ Timer started: ${e}`)}timeEnd(e){const t=this.activeTimers.get(e);if(t!==void 0){const n=performance.now()-t;this.activeTimers.delete(e),this.info("Utils",`⏱️ Timer ended: ${e}`,{duration:`${n.toFixed(2)}ms`})}else this.warn("Utils",`⏱️ Timer not found: ${e}`)}group(e,t){this.groupStack.push(t);const n="  ".repeat(this.groupStack.length-1);console.group(`${n}🔽 ${t}`),this.debug(e,`Group started: ${t}`)}groupEnd(){if(this.groupStack.length>0){const e=this.groupStack.pop();console.groupEnd(),this.debug("Utils",`Group ended: ${e}`)}}clearLogs(){try{sessionStorage.removeItem("barcode-scanner-logs"),console.clear(),this.info("Utils","Logs cleared")}catch{this.warn("Utils","Failed to clear logs")}}exportLogs(){try{return JSON.parse(sessionStorage.getItem("barcode-scanner-logs")||"[]")}catch{return this.warn("Utils","Failed to export logs"),[]}}measure(e,t){this.time(e);try{const n=t();return this.timeEnd(e),n}catch(n){throw this.timeEnd(e),this.error("Utils",`Performance measurement failed: ${e}`,n),n}}async measureAsync(e,t){this.time(e);try{const n=await t();return this.timeEnd(e),n}catch(n){throw this.timeEnd(e),this.error("Utils",`Async performance measurement failed: ${e}`,n),n}}}const r=new R;typeof window<"u"&&(window.logger=r);const v=class v{constructor(){h(this,"providers",new Map);h(this,"loadedProviders",new Map);h(this,"currentProvider",null);this.registerDefaultProviders()}static getInstance(){return v.instance||(v.instance=new v),v.instance}registerDefaultProviders(){this.providers.set("zxing",{name:"zxing",displayName:"ZXing",description:"Fast and reliable barcode scanner supporting QR codes and PDF417",loader:async()=>{const{ZXingProvider:e}=await y(async()=>{const{ZXingProvider:t}=await import("./zxingProvider-BEwpmSRr.js");return{ZXingProvider:t}},[]);return e}}),this.providers.set("barcode-detector",{name:"barcode-detector",displayName:"BarcodeDetector (Native)",description:"Native browser API for barcode detection (Chrome/Edge only) - fastest performance",loader:async()=>{const{BarcodeDetectorProvider:e}=await y(async()=>{const{BarcodeDetectorProvider:t}=await import("./barcodeDetectorProvider-B24uzl0V.js");return{BarcodeDetectorProvider:t}},[]);return e}}),this.providers.set("zxing-wasm",{name:"zxing-wasm",displayName:"ZXing (WASM)",description:"Pure WebAssembly build of ZXing – high performance",loader:async()=>{const{ZXingWasmProvider:e}=await y(async()=>{const{ZXingWasmProvider:t}=await import("./zxingWasmProvider-BVwD4DOh.js");return{ZXingWasmProvider:t}},[]);return e}}),this.providers.set("dynamsoft",{name:"dynamsoft",displayName:"Dynamsoft SDK",description:"Commercial SDK with industry-leading accuracy (license required)",loader:async()=>{const{DynamsoftProvider:e}=await y(async()=>{const{DynamsoftProvider:t}=await import("./dynamsoftProvider-BbOozJcQ.js");return{DynamsoftProvider:t}},[]);return e}})}getAvailableProviders(){return Array.from(this.providers.values())}async loadProvider(e){if(r.info("ProviderRegistry",`Loading provider: ${e}`),this.loadedProviders.has(e)){const n=this.loadedProviders.get(e);return r.debug("ProviderRegistry",`Provider ${e} already loaded`),n}const t=this.providers.get(e);if(!t)throw new Error(`Unknown provider: ${e}`);try{const n=await t.loader(),i=new n;return await i.init(),this.loadedProviders.set(e,i),r.info("ProviderRegistry",`Provider ${e} loaded successfully`),i}catch(n){throw r.error("ProviderRegistry",`Failed to load provider ${e}`,n),n}}async setCurrentProvider(e){var t,n;this.currentProvider&&(r.debug("ProviderRegistry",`Destroying current provider: ${this.currentProvider.name}`),(n=(t=this.currentProvider).destroy)==null||n.call(t)),this.currentProvider=await this.loadProvider(e);try{localStorage.setItem("barcode-scanner-provider",e)}catch(i){r.warn("ProviderRegistry","Failed to save provider preference",i)}return r.info("ProviderRegistry",`Current provider set to: ${e}`),this.currentProvider}getCurrentProvider(){return this.currentProvider}getPreferredProvider(){try{return localStorage.getItem("barcode-scanner-provider")||"zxing"}catch(e){return r.warn("ProviderRegistry","Failed to get provider preference",e),"zxing"}}async initializeDefaultProvider(){const e=this.getPreferredProvider();return r.info("ProviderRegistry",`Initializing default provider: ${e}`),await this.setCurrentProvider(e)}cleanup(){var e,t,n;r.info("ProviderRegistry","Cleaning up all providers"),this.currentProvider&&((t=(e=this.currentProvider).destroy)==null||t.call(e),this.currentProvider=null);for(const[i,s]of this.loadedProviders)r.debug("ProviderRegistry",`Destroying provider: ${i}`),(n=s.destroy)==null||n.call(s);this.loadedProviders.clear()}};h(v,"instance");let w=v;class A{constructor(){h(this,"providerRegistry");h(this,"currentProvider",null);h(this,"videoElement");h(this,"canvasElement");h(this,"isScanning",!1);h(this,"stream",null);h(this,"eventListeners",new Map);r.info("Scanner","Initializing BarcodeScanner"),r.group("Scanner","Constructor");try{if(this.providerRegistry=w.getInstance(),this.videoElement=document.getElementById("camera-preview"),this.canvasElement=document.getElementById("capture-canvas"),!this.videoElement||!this.canvasElement){const e=new Error("Required video or canvas elements not found");throw r.error("Scanner","DOM elements not found",e),e}r.debug("Scanner","DOM elements found successfully"),this.initializeEventListeners(),r.info("Scanner","BarcodeScanner initialized successfully")}catch(e){throw r.error("Scanner","Failed to initialize BarcodeScanner",e),e}finally{r.groupEnd()}}initializeEventListeners(){this.eventListeners.set("success",[]),this.eventListeners.set("error",[])}on(e,t){const n=this.eventListeners.get(e);n&&n.push(t)}emit(e,t){const n=this.eventListeners.get(e);n&&n.forEach(i=>i(t))}async start(){if(r.info("Scanner","Starting camera scanner"),this.isScanning){r.warn("Scanner","Scanner already running, ignoring start request");return}r.time("Camera Initialization");try{this.currentProvider||(this.currentProvider=await this.providerRegistry.initializeDefaultProvider(),r.debug("Scanner",`Using provider: ${this.currentProvider.name}`));const e={video:{facingMode:"environment",width:{ideal:1280},height:{ideal:720}}};r.debug("Scanner","Requesting camera access",{constraints:e}),this.stream=await navigator.mediaDevices.getUserMedia(e),r.debug("Scanner","Camera stream obtained"),this.videoElement.srcObject=this.stream,await new Promise((t,n)=>{this.videoElement.onloadedmetadata=()=>{r.debug("Scanner","Video metadata loaded",{width:this.videoElement.videoWidth,height:this.videoElement.videoHeight}),this.videoElement.play().then(()=>{r.debug("Scanner","Video playback started"),t()}).catch(n)},this.videoElement.onerror=n}),this.isScanning=!0,r.timeEnd("Camera Initialization"),r.info("Scanner","Camera scanner started successfully"),this.startScanningLoop()}catch(e){throw r.timeEnd("Camera Initialization"),r.error("Scanner","Failed to start camera scanner",e),this.emit("error",e),e}}stop(){this.isScanning=!1,this.stream&&(this.stream.getTracks().forEach(e=>e.stop()),this.stream=null),this.videoElement.srcObject=null}async startScanningLoop(){if(this.isScanning){try{const e=await this.scanFrame();if(e){const t=this.captureFrame();this.emit("success",{text:e,imageData:t});return}}catch(e){r.debug("Scanner","Frame scan error",e)}setTimeout(()=>this.startScanningLoop(),100)}}async scanFrame(){if(!this.currentProvider)throw new Error("No provider initialized");r.time("Frame Scan");const e=await this.currentProvider.scanVideoFrame(this.videoElement,this.canvasElement);return r.timeEnd("Frame Scan"),e}captureFrame(){const e=this.canvasElement.getContext("2d");if(!e)throw new Error("Cannot get canvas context");const t=Math.min(400,this.videoElement.videoWidth),n=t/this.videoElement.videoWidth*this.videoElement.videoHeight;return this.canvasElement.width=t,this.canvasElement.height=n,e.drawImage(this.videoElement,0,0,t,n),this.canvasElement.toDataURL("image/jpeg",.8)}async getSupportedDevices(){try{return(await navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="videoinput")}catch(e){return console.error("Error getting media devices:",e),[]}}async scanImageFile(e){return r.info("Scanner","Scanning uploaded image file",{fileName:e.name,fileSize:e.size,fileType:e.type}),r.time("Image File Scan"),new Promise((t,n)=>{if(!e.type.startsWith("image/")){r.warn("Scanner","Invalid file type rejected",{fileType:e.type}),n(new Error("Please select a valid image file."));return}r.debug("Scanner","File type validation passed");const i=new Image,s=document.createElement("canvas"),d=s.getContext("2d");if(!d){n(new Error("Cannot get canvas context"));return}i.onload=async()=>{r.debug("Scanner","Image loaded successfully",{width:i.width,height:i.height});try{this.currentProvider||(this.currentProvider=await this.providerRegistry.initializeDefaultProvider()),s.width=i.width,s.height=i.height,d.drawImage(i,0,0),r.debug("Scanner","Image drawn to canvas"),r.debug("Scanner","Attempting barcode decode..."),r.time("Provider Scan");const l=await this.currentProvider.scanImage(i);if(r.timeEnd("Provider Scan"),!l)throw new Error("No barcode found in the image");r.info("Scanner","Barcode decoded successfully",{text:l});const o=document.createElement("canvas"),u=o.getContext("2d");if(u){const g=Math.min(400/i.width,400/i.height);o.width=i.width*g,o.height=i.height*g,u.drawImage(i,0,0,o.width,o.height),r.timeEnd("Image File Scan"),r.info("Scanner","Image file scan completed successfully"),t({text:l,imageData:o.toDataURL("image/jpeg",.8)})}else r.timeEnd("Image File Scan"),r.error("Scanner","Cannot create thumbnail canvas"),n(new Error("Cannot create thumbnail"))}catch(l){r.timeEnd("Image File Scan"),r.warn("Scanner","No barcode found in uploaded image",l),n(new Error("No barcode found in the image. Please try another image."))}},i.onerror=()=>{r.timeEnd("Image File Scan"),r.error("Scanner","Failed to load image file"),n(new Error("Failed to load image. Please try another file."))};const a=new FileReader;a.onload=l=>{var o;(o=l.target)!=null&&o.result&&(i.src=l.target.result)},a.onerror=()=>{n(new Error("Failed to read file."))},a.readAsDataURL(e)})}async setProvider(e){r.info("Scanner",`Switching to provider: ${e}`);const t=this.isScanning;t&&this.stop(),this.currentProvider=await this.providerRegistry.setCurrentProvider(e),t&&await this.start()}getCurrentProvider(){return this.currentProvider}getAvailableProviders(){return this.providerRegistry.getAvailableProviders()}isSupported(){return!!(navigator.mediaDevices&&typeof navigator.mediaDevices.getUserMedia=="function"&&window.HTMLVideoElement&&window.HTMLCanvasElement)}cleanup(){this.stop(),this.providerRegistry.cleanup()}}async function D(){if(r.info("ServiceWorker","Attempting to register service worker"),"serviceWorker"in navigator)try{const c=await navigator.serviceWorker.register("/sw.js");r.info("ServiceWorker","Service Worker registered successfully",{scope:c.scope,updateViaCache:c.updateViaCache}),c.addEventListener("updatefound",()=>{r.info("ServiceWorker","Service Worker update found");const e=c.installing;e&&e.addEventListener("statechange",()=>{r.debug("ServiceWorker","Service Worker state changed",{state:e.state}),e.state==="installed"&&navigator.serviceWorker.controller&&r.info("ServiceWorker","New app version available")})})}catch(c){r.error("ServiceWorker","Service Worker registration failed",c)}else r.warn("ServiceWorker","Service Worker not supported in this browser")}function S(c){try{return new URL(c),!0}catch{return!1}}function $(c){return c.name==="NotAllowedError"?"Camera permission denied. Please allow camera access and try again.":c.name==="NotFoundError"?"No camera found on this device.":c.name==="NotSupportedError"?"Camera not supported in this browser.":c.name==="OverconstrainedError"?"Camera constraints not supported. Trying with default settings.":`Error: ${c.message}`}class U{constructor(){h(this,"registry");this.registry=w.getInstance()}async benchmarkImageScan(e){r.info("BenchmarkRunner","Starting image scan benchmark",{fileName:e.name});const t=this.registry.getAvailableProviders(),n=[],i=await this.loadImage(e);for(const d of t){r.info("BenchmarkRunner",`Testing provider: ${d.displayName}`);try{const a=performance.now(),o=await(await this.registry.loadProvider(d.name)).scanImage(i),u=performance.now()-a;n.push({providerName:d.displayName,success:o!==null,duration:u,result:o||void 0}),r.debug("BenchmarkRunner",`Provider ${d.displayName} completed`,{success:o!==null,duration:`${u.toFixed(2)}ms`,result:o})}catch(a){const l=performance.now()-performance.now();n.push({providerName:d.displayName,success:!1,duration:l,error:a.message}),r.warn("BenchmarkRunner",`Provider ${d.displayName} failed`,a)}}const s=this.generateReport(`Image Scan - ${e.name}`,n);return r.info("BenchmarkRunner","Benchmark completed",s.summary),s}async benchmarkVideoFrame(e,t,n=10){r.info("BenchmarkRunner","Starting video frame benchmark",{iterations:n});const i=this.registry.getAvailableProviders(),s=[];for(const a of i){r.info("BenchmarkRunner",`Testing provider: ${a.displayName}`);const l=[];try{const o=await this.registry.loadProvider(a.name);for(let g=0;g<n;g++)try{const p=performance.now(),f=await o.scanVideoFrame(e,t),b=performance.now()-p;l.push({providerName:a.displayName,success:f!==null,duration:b,result:f||void 0}),await new Promise(k=>setTimeout(k,10))}catch(p){l.push({providerName:a.displayName,success:!1,duration:0,error:p.message})}const u=l.filter(g=>g.success),m=u.length>0?u.reduce((g,p)=>g+p.duration,0)/u.length:0;s.push({providerName:a.displayName,success:u.length>0,duration:m,result:u.length>0?`${u.length}/${n} successful`:void 0,error:u.length===0?"All iterations failed":void 0}),r.debug("BenchmarkRunner",`Provider ${a.displayName} average`,{averageDuration:`${m.toFixed(2)}ms`,successRate:`${u.length}/${n}`})}catch(o){s.push({providerName:a.displayName,success:!1,duration:0,error:o.message}),r.warn("BenchmarkRunner",`Provider ${a.displayName} failed to initialize`,o)}}const d=this.generateReport(`Video Frame Scan (${n} iterations)`,s);return r.info("BenchmarkRunner","Video benchmark completed",d.summary),d}async loadImage(e){return new Promise((t,n)=>{const i=new Image;i.onload=()=>t(i),i.onerror=()=>n(new Error("Failed to load image"));const s=new FileReader;s.onload=d=>{var a;(a=d.target)!=null&&a.result&&(i.src=d.target.result)},s.onerror=()=>n(new Error("Failed to read file")),s.readAsDataURL(e)})}generateReport(e,t){const n=t.filter(a=>a.success),i=n.length>0?n.reduce((a,l)=>l.duration<a.duration?l:a).providerName:null,s=n.length>0?n.reduce((a,l)=>a+l.duration,0)/n.length:0,d=t.length>0?n.length/t.length:0;return{testName:e,results:t,summary:{fastestProvider:i,averageDuration:s,successRate:d}}}exportReport(e){const t=[`# ${e.testName}`,"","## Summary",`- Fastest Provider: ${e.summary.fastestProvider||"None"}`,`- Average Duration: ${e.summary.averageDuration.toFixed(2)}ms`,`- Success Rate: ${(e.summary.successRate*100).toFixed(1)}%`,"","## Results","| Provider | Success | Duration (ms) | Result | Error |","|----------|---------|---------------|---------|--------|"];for(const n of e.results)t.push(`| ${n.providerName} | ${n.success?"✅":"❌"} | ${n.duration.toFixed(2)} | ${n.result||"-"} | ${n.error||"-"} |`);return t.join(`
`)}}const P=new U;typeof window<"u"&&(window.benchmarkRunner=P);class F{constructor(){h(this,"scanner");h(this,"elements");r.info("App","Initializing BarcodeApp"),r.group("App","Constructor");try{this.elements=this.getElements(),r.debug("App","DOM elements retrieved successfully"),this.scanner=new A,r.debug("App","BarcodeScanner instance created"),this.initializeEventListeners(),r.debug("App","Event listeners initialized"),this.initializeProviderSelector(),r.debug("App","Provider selector initialized"),this.showLandingPage(),r.info("App","Application initialized successfully")}catch(e){throw r.error("App","Failed to initialize application",e),e}finally{r.groupEnd()}}cleanup(){r.info("App","Cleaning up application"),this.scanner.cleanup()}async initializeProviderSelector(){r.info("App","Initializing provider selector");try{const e=this.scanner.getAvailableProviders();this.elements.providerSelect.innerHTML="",e.forEach(n=>{const i=document.createElement("option");i.value=n.name,i.textContent=n.displayName,this.elements.providerSelect.appendChild(i)});const t=this.scanner.getCurrentProvider();if(t)this.elements.providerSelect.value=t.name,this.updateProviderDescription(t.name);else{const n=e[0];n&&(this.elements.providerSelect.value=n.name,await this.scanner.setProvider(n.name),this.updateProviderDescription(n.name))}r.debug("App","Provider selector populated",{providerCount:e.length,currentProvider:this.elements.providerSelect.value})}catch(e){r.error("App","Failed to initialize provider selector",e)}}updateProviderDescription(e){const n=this.scanner.getAvailableProviders().find(i=>i.name===e);n&&(this.elements.providerDescription.textContent=n.description)}async handleProviderChange(e){const n=e.target.value;r.info("App",`Switching to provider: ${n}`);try{this.showProcessing("Switching scanner engine..."),await this.scanner.setProvider(n),this.updateProviderDescription(n),this.updateProviderBadges(),r.info("App",`Successfully switched to provider: ${n}`)}catch(i){r.error("App",`Failed to switch provider: ${n}`,i),this.handleError(i instanceof Error?i:new Error("Failed to switch provider"))}finally{this.hideProcessing()}}updateProviderBadges(){const e=this.scanner.getCurrentProvider();if(e){const t=`Engine: ${e.name}`;this.elements.scannerProviderBadge.textContent=t,this.elements.resultProviderBadge.textContent=t}}getElements(){const e={openCameraBtn:document.getElementById("open-camera-btn"),uploadBtn:document.getElementById("upload-btn"),imageUpload:document.getElementById("image-upload"),dropZone:document.getElementById("drop-zone"),stopScanBtn:document.getElementById("stop-scan-btn"),scanAgainBtn:document.getElementById("scan-again-btn"),landingPage:document.getElementById("landing-page"),scannerPage:document.getElementById("scanner-page"),resultPage:document.getElementById("result-page"),errorMessage:document.getElementById("error-message"),providerSelect:document.getElementById("provider-select"),providerDescription:document.getElementById("provider-description"),scannerProviderBadge:document.getElementById("scanner-provider-badge"),resultProviderBadge:document.getElementById("result-provider-badge"),scanTiming:document.getElementById("scan-timing"),decodeTiming:document.getElementById("decode-timing"),benchmarkBtn:document.getElementById("benchmark-btn"),benchmarkUpload:document.getElementById("benchmark-upload")};return Object.entries(e).forEach(([t,n])=>{if(!n)throw new Error(`Required element not found: ${t}`)}),e}initializeEventListeners(){r.debug("App","Setting up event listeners"),this.elements.openCameraBtn.addEventListener("click",()=>{r.info("UI","Open camera button clicked"),this.startScanning()}),this.elements.uploadBtn.addEventListener("click",()=>{r.info("UI","Upload button clicked"),this.triggerImageUpload()}),this.elements.imageUpload.addEventListener("change",e=>{r.info("UI","File input changed"),this.handleImageUpload(e)}),this.elements.stopScanBtn.addEventListener("click",()=>{r.info("UI","Stop scan button clicked"),this.stopScanning()}),this.elements.scanAgainBtn.addEventListener("click",()=>{r.info("UI","Scan again button clicked"),this.stopScanning()}),this.elements.providerSelect.addEventListener("change",e=>{r.info("UI","Provider changed"),this.handleProviderChange(e)}),this.elements.dropZone.addEventListener("click",()=>{r.info("UI","Drop zone clicked"),this.triggerImageUpload()}),this.elements.dropZone.addEventListener("dragover",e=>{r.debug("UI","File dragged over drop zone"),this.handleDragOver(e)}),this.elements.dropZone.addEventListener("dragleave",e=>{r.debug("UI","File dragged away from drop zone"),this.handleDragLeave(e)}),this.elements.dropZone.addEventListener("drop",e=>{r.info("UI","File dropped on drop zone"),this.handleDrop(e)}),this.scanner.on("success",e=>{r.info("Scanner","Barcode scan successful",{text:e.text}),this.handleScanSuccess(e)}),this.scanner.on("error",e=>{r.error("Scanner","Scanner error occurred",e),this.handleError(e)}),this.elements.benchmarkBtn.addEventListener("click",()=>{r.info("UI","Benchmark button clicked"),this.elements.benchmarkUpload.click()}),this.elements.benchmarkUpload.addEventListener("change",e=>{r.info("UI","Benchmark image selected"),this.handleBenchmarkUpload(e)}),r.debug("App","All event listeners set up successfully")}async startScanning(){r.info("App","Starting camera scanning"),r.time("Camera Start");try{this.hideError(),this.showScannerPage(),r.debug("App","Requesting camera access..."),await this.scanner.start(),r.timeEnd("Camera Start"),r.info("App","Camera scanning started successfully")}catch(e){r.timeEnd("Camera Start"),r.error("App","Failed to start camera scanning",e),this.handleError(e instanceof Error?e:new Error("Unknown error")),this.showLandingPage()}}stopScanning(){r.info("App","Stopping camera scanning"),this.scanner.stop(),this.showLandingPage(),r.debug("App","Camera scanning stopped and returned to landing page")}handleScanSuccess(e){r.info("App","Scan successful, displaying result",{textLength:e.text.length,isUrl:S(e.text)}),this.scanner.stop(),this.showResultPage(e)}handleError(e){r.error("App","Handling application error",e);const t=this.getErrorMessage(e);r.debug("App","Formatted error message for user",{message:t}),this.showError(t)}getErrorMessage(e){return $(e)}showLandingPage(){r.debug("UI","Showing landing page"),this.hideAllPages(),this.elements.landingPage.classList.remove("hidden")}showScannerPage(){r.debug("UI","Showing scanner page"),this.hideAllPages(),this.elements.scannerPage.classList.remove("hidden"),this.updateProviderBadges()}showResultPage(e){this.hideAllPages();const t=document.getElementById("captured-image"),n=document.getElementById("decoded-text");t.src=e.imageData,S(e.text)?n.innerHTML=`<a href="${e.text}" target="_blank" rel="noopener noreferrer">${e.text}</a>`:n.textContent=e.text,this.elements.resultPage.classList.remove("hidden")}hideAllPages(){this.elements.landingPage.classList.add("hidden"),this.elements.scannerPage.classList.add("hidden"),this.elements.resultPage.classList.add("hidden")}showError(e){this.elements.errorMessage.textContent=e,this.elements.errorMessage.classList.remove("hidden"),setTimeout(()=>this.hideError(),5e3)}hideError(){this.elements.errorMessage.classList.add("hidden")}triggerImageUpload(){this.elements.imageUpload.click()}async handleImageUpload(e){var i;const n=(i=e.target.files)==null?void 0:i[0];n&&await this.processImageFile(n)}handleDragOver(e){e.preventDefault(),this.elements.dropZone.classList.add("dragover")}handleDragLeave(e){e.preventDefault(),this.elements.dropZone.classList.remove("dragover")}async handleDrop(e){var n;e.preventDefault(),this.elements.dropZone.classList.remove("dragover");const t=(n=e.dataTransfer)==null?void 0:n.files;t&&t.length>0&&await this.processImageFile(t[0])}async processImageFile(e){r.info("Upload","Processing uploaded image file",{fileName:e.name,fileSize:e.size,fileType:e.type}),r.time("Image Processing");try{this.hideError(),this.showProcessing("Analyzing image...");const t=await this.scanner.scanImageFile(e);r.timeEnd("Image Processing"),r.info("Upload","Image processing successful"),this.hideProcessing(),this.handleScanSuccess(t)}catch(t){r.timeEnd("Image Processing"),r.error("Upload","Image processing failed",t),this.hideProcessing(),this.handleError(t instanceof Error?t:new Error("Unknown error"))}}showProcessing(e){const t=document.createElement("div");t.id="processing-overlay",t.className="processing",t.innerHTML=`
      <div class="spinner"></div>
      <p>${e}</p>
    `,this.elements.landingPage.appendChild(t)}hideProcessing(){const e=document.getElementById("processing-overlay");e&&e.remove()}async handleBenchmarkUpload(e){var i;const n=(i=e.target.files)==null?void 0:i[0];if(!n){r.warn("App","No file selected for benchmarking");return}r.info("App","Running benchmark"),r.time("Benchmark");try{this.hideError(),this.showProcessing("Running benchmark...");const s=await P.benchmarkImageScan(n),d=P.exportReport(s);r.timeEnd("Benchmark"),r.info("App","Benchmark completed successfully",{summary:s.summary});const a=`Fastest: ${s.summary.fastestProvider||"None"}
Avg Duration: ${s.summary.averageDuration.toFixed(2)}ms
Success Rate: ${(s.summary.successRate*100).toFixed(1)}%`,l=await new Promise(g=>{const p=new FileReader;p.onload=f=>g(f.target.result),p.readAsDataURL(n)}),o=['<table class="benchmark-table">',"<thead><tr><th>Provider</th><th>Success</th><th>Duration (ms)</th><th>Decoded Text</th></tr></thead>","<tbody>",...s.results.map(g=>`
          <tr>
            <td>${g.providerName}</td>
            <td>${g.success?"✅":"❌"}</td>
            <td>${g.duration.toFixed(2)}</td>
            <td>${g.result?g.result:"-"}</td>
          </tr>
        `),"</tbody></table>"].join("");this.hideAllPages();const u=document.getElementById("decoded-text");u.innerHTML=`<pre>${a}</pre>`+o;const m=document.getElementById("captured-image");m.src=l,this.elements.resultPage.classList.remove("hidden"),console.log(`
Benchmark Report:
`+d)}catch(s){r.timeEnd("Benchmark"),r.error("App","Benchmark failed",s),this.handleError(s instanceof Error?s:new Error("Benchmark failed"))}finally{this.hideProcessing(),this.elements.benchmarkUpload.value=""}}}document.addEventListener("DOMContentLoaded",()=>{try{new F,D()}catch(c){console.error("Failed to initialize app:",c),document.getElementById("error-message").textContent="Failed to initialize the application. Please refresh the page.",document.getElementById("error-message").classList.remove("hidden")}});export{r as l};
